{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nexport class DropdownDirective {\n  constructor(elementRef, rendered) {\n    this.elementRef = elementRef;\n    this.rendered = rendered;\n  }\n  onClick() {\n    let indexOf = this.classes.indexOf('open');\n    if (indexOf > 0) {\n      this.classes.splice(indexOf, 1);\n    } else {\n      this.classes.push('open');\n    }\n  }\n}\n_class = DropdownDirective;\n_class.ɵfac = function DropdownDirective_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n_class.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n  type: _class,\n  selectors: [[\"\", \"appDropdown\", \"\"]],\n  hostVars: 2,\n  hostBindings: function DropdownDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function DropdownDirective_click_HostBindingHandler() {\n        return ctx.onClick();\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.classes);\n    }\n  }\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,iBAAiB;EAG1BC,YAAoBC,UAAsB,EAAUC,QAAmB;IAAnD,eAAU,GAAVD,UAAU;IAAsB,aAAQ,GAARC,QAAQ;EAC5D;EAEuBC,OAAO;IAC1B,IAAIC,OAAO,GAAG,IAAI,CAACC,OAAO,CAACD,OAAO,CAAC,MAAM,CAAC;IAE1C,IAAGA,OAAO,GAAG,CAAC,EACd;MACI,IAAI,CAACC,OAAO,CAACC,MAAM,CAACF,OAAO,EAAC,CAAC,CAAC;KACjC,MAAI;MACD,IAAI,CAACC,OAAO,CAACE,IAAI,CAAC,MAAM,CAAC;;EAEjC;;SAfSR,iBAAiB;;mBAAjBA,MAAiB;AAAA;;QAAjBA,MAAiB;EAAAS;EAAAC;EAAAC;IAAA;;eAAjBC,aAAS;MAAA","names":["DropdownDirective","constructor","elementRef","rendered","onClick","indexOf","classes","splice","push","selectors","hostVars","hostBindings","ctx"],"sourceRoot":"","sources":["C:\\Users\\Admin\\Documents\\Angular\\recipe-app\\src\\app\\directives\\dropdown.directive.ts"],"sourcesContent":["import { Directive, ElementRef, HostBinding, HostListener, Renderer2 } from \"@angular/core\";\r\n\r\n@Directive({\r\n    selector: \"[appDropdown]\"\r\n})\r\n\r\nexport class DropdownDirective{\r\n    @HostBinding('class') classes!: string[];\r\n\r\n    constructor(private elementRef: ElementRef, private rendered: Renderer2){       \r\n    }\r\n\r\n    @HostListener('click') onClick(){\r\n        let indexOf = this.classes.indexOf('open'); \r\n\r\n        if(indexOf > 0)\r\n        {\r\n            this.classes.splice(indexOf,1);\r\n        }else{\r\n            this.classes.push('open');\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}